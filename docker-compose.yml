version: '3.8'

services:
  # Banco de dados MySQL
  mysql:
    image: mysql:8.0
    container_name: zapbot-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: zapbot_root_2024
      MYSQL_DATABASE: zapbot
      MYSQL_USER: zapbot_user
      MYSQL_PASSWORD: zapbot_pass_2024
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./create_mysql_tables.sql:/docker-entrypoint-initdb.d/01-create-tables.sql:ro
    networks:
      - zapbot-network
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --innodb-buffer-pool-size=256M
      --max-connections=200
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-pzapbot_root_2024"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Aplicação ZapBot
  zapbot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: zapbot-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      # Configurações da aplicação
      NODE_ENV: production
      PORT: 3000
      NEXT_TELEMETRY_DISABLED: 1
      
      # Configurações do banco de dados
      DATABASE_URL: "mysql://zapbot_user:zapbot_pass_2024@mysql:3306/zapbot"
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: zapbot_user
      DB_PASS: zapbot_pass_2024
      DB_NAME: zapbot
      
      # Configurações de autenticação (ALTERE ESTAS CHAVES!)
      NEXTAUTH_SECRET: "sua_chave_secreta_muito_segura_de_32_caracteres_aqui_2024"
      NEXTAUTH_URL: "http://localhost:3000"
      
      # Configurações de email (Gmail - CONFIGURE SUAS CREDENCIAIS!)
      EMAIL_SERVER_HOST: "smtp.gmail.com"
      EMAIL_SERVER_PORT: 587
      EMAIL_SERVER_USER: "seu-email@gmail.com"
      EMAIL_SERVER_PASSWORD: "sua_senha_de_app_do_gmail"
      EMAIL_FROM: "ZapBot <seu-email@gmail.com>"
    volumes:
      - zapbot_data:/app/data
    networks:
      - zapbot-network
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # phpMyAdmin (opcional - para gerenciar o banco)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: zapbot-phpmyadmin
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: zapbot_user
      PMA_PASSWORD: zapbot_pass_2024
      MYSQL_ROOT_PASSWORD: zapbot_root_2024
    networks:
      - zapbot-network
    depends_on:
      mysql:
        condition: service_healthy
    profiles:
      - admin

  # Nginx (opcional - proxy reverso)
  nginx:
    image: nginx:alpine
    container_name: zapbot-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - zapbot-network
    depends_on:
      - zapbot
    profiles:
      - production

volumes:
  mysql_data:
    driver: local
  zapbot_data:
    driver: local

networks:
  zapbot-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# ==========================================
# INSTRUÇÕES DE USO
# ==========================================
#
# 1. CONFIGURAÇÃO BÁSICA (desenvolvimento):
#    docker-compose up -d
#
# 2. COM PHPMYADMIN (para gerenciar banco):
#    docker-compose --profile admin up -d
#
# 3. PRODUÇÃO COM NGINX:
#    docker-compose --profile production up -d
#
# 4. PARAR TODOS OS SERVIÇOS:
#    docker-compose down
#
# 5. REBUILD COMPLETO:
#    docker-compose down -v
#    docker-compose build --no-cache
#    docker-compose up -d
#
# 6. LOGS:
#    docker-compose logs -f zapbot
#    docker-compose logs -f mysql
#
# 7. BACKUP DO BANCO:
#    docker-compose exec mysql mysqldump -u zapbot_user -pzapbot_pass_2024 zapbot > backup.sql
#
# 8. RESTAURAR BACKUP:
#    docker-compose exec -T mysql mysql -u zapbot_user -pzapbot_pass_2024 zapbot < backup.sql
#
# ==========================================
# ACESSOS
# ==========================================
#
# - ZapBot: http://localhost:3000
# - phpMyAdmin: http://localhost:8080
# - MySQL: localhost:3306
#
# Credenciais padrão do ZapBot:
# - Email: ti@adlux.com.br
# - Senha: 197755Jesus*
#
# Credenciais do MySQL:
# - Root: zapbot_root_2024
# - User: zapbot_user
# - Pass: zapbot_pass_2024
# - Database: zapbot
#
# ==========================================
# IMPORTANTE - SEGURANÇA
# ==========================================
#
# ANTES DE USAR EM PRODUÇÃO:
#
# 1. ALTERE TODAS AS SENHAS:
#    - MYSQL_ROOT_PASSWORD
#    - MYSQL_PASSWORD
#    - NEXTAUTH_SECRET
#
# 2. CONFIGURE EMAIL:
#    - EMAIL_SERVER_USER
#    - EMAIL_SERVER_PASSWORD
#    - EMAIL_FROM
#
# 3. CONFIGURE DOMÍNIO:
#    - NEXTAUTH_URL (seu domínio real)
#
# 4. USE HTTPS EM PRODUÇÃO:
#    - Configure SSL no Nginx
#    - Use certificados válidos
#
# ==========================================